apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f /home/ubuntu/docker_open5gs/docker-compose.yaml
    kompose.version: 1.25.0 (a70f80cc)
  creationTimestamp: null
  labels:
    io.kompose.service: pcrf
  name: pcrf
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pcrf
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f /home/ubuntu/docker_open5gs/docker-compose.yaml
        kompose.version: 1.25.0 (a70f80cc)
      creationTimestamp: null
      labels:
        io.kompose.network/default: "true"
        io.kompose.service: pcrf
    spec:
      containers:
        - env:
            - name: COMPONENT_NAME
              value: pcrf-1
            - name: DNS_IP
              valueFrom:
                configMapKeyRef:
                  key: DNS_IP
                  name: env
            - name: DOCKER_HOST_IP
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_HOST_IP
                  name: env
            - name: ENB_IP
              valueFrom:
                configMapKeyRef:
                  key: ENB_IP
                  name: env
            - name: FHOSS_IP
              valueFrom:
                configMapKeyRef:
                  key: FHOSS_IP
                  name: env
            - name: HSS_IP
              valueFrom:
                configMapKeyRef:
                  key: HSS_IP
                  name: env
            - name: ICSCF_IP
              valueFrom:
                configMapKeyRef:
                  key: ICSCF_IP
                  name: env
            - name: MCC
              valueFrom:
                configMapKeyRef:
                  key: MCC
                  name: env
            - name: MME_IP
              valueFrom:
                configMapKeyRef:
                  key: MME_IP
                  name: env
            - name: MNC
              valueFrom:
                configMapKeyRef:
                  key: MNC
                  name: env
            - name: MONGO_IP
              valueFrom:
                configMapKeyRef:
                  key: MONGO_IP
                  name: env
            - name: MYSQL_IP
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_IP
                  name: env
            - name: PCRF_IP
              valueFrom:
                configMapKeyRef:
                  key: PCRF_IP
                  name: env
            - name: PCSCF_IP
              valueFrom:
                configMapKeyRef:
                  key: PCSCF_IP
                  name: env
            - name: PGW_IP
              valueFrom:
                configMapKeyRef:
                  key: PGW_IP
                  name: env
            - name: RTPENGINE_IP
              valueFrom:
                configMapKeyRef:
                  key: RTPENGINE_IP
                  name: env
            - name: SCSCF_IP
              valueFrom:
                configMapKeyRef:
                  key: SCSCF_IP
                  name: env
            - name: SGW_IP
              valueFrom:
                configMapKeyRef:
                  key: SGW_IP
                  name: env
            - name: TEST_NETWORK
              valueFrom:
                configMapKeyRef:
                  key: TEST_NETWORK
                  name: env
            - name: WEBUI_IP
              valueFrom:
                configMapKeyRef:
                  key: WEBUI_IP
                  name: env
          image: ricaportela/docker_open5gs
          name: pcrf
          ports:
            - containerPort: 3868
              protocol: UDP
            - containerPort: 3868
            - containerPort: 3868
              protocol: SCTP
            - containerPort: 5868
              protocol: UDP
            - containerPort: 5868
            - containerPort: 5868
              protocol: SCTP
          resources: {}
          volumeMounts:
            - mountPath: /mnt/pcrf
              name: pcrf-claim0
            - mountPath: /open5gs/install/var/log/open5gs
              name: pcrf-claim1
            - mountPath: /etc/timezone
              name: pcrf-claim2
              readOnly: true
            - mountPath: /etc/localtime
              name: pcrf-claim3
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: pcrf-claim0
          persistentVolumeClaim:
            claimName: pcrf-claim0
        - name: pcrf-claim1
          persistentVolumeClaim:
            claimName: pcrf-claim1
        - name: pcrf-claim2
          persistentVolumeClaim:
            claimName: pcrf-claim2
            readOnly: true
        - name: pcrf-claim3
          persistentVolumeClaim:
            claimName: pcrf-claim3
            readOnly: true
status: {}
